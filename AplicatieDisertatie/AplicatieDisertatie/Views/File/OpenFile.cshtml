@model AplicatieDisertatie.Models.FileViewModel

@{
	ViewBag.Title = "OpenFile";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
	$(function () {
		$('#UpdatedOn').datetimepicker();
	});
</script>

<h2>OpenFile</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>@Html.DisplayName(Model.FileName)</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		@foreach (AplicatieDisertatie.Models.QuestionViewModel question in Model.Questions)
		{
		<div class="form-group">
			@Html.Label(question.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })

			<div class="form-check">
				@if (question.TypeId == 1)
				{
					foreach (var option in question.QuestionOptions)
					{
						<div class="col-md-10">
							@Html.RadioButton("option", option.Answer, new { id = "@option.Answer" })
						</div>

						@*<div class="col-md-10">
						@Html.RadioButton(option.Answer, false, htmlAttributes: new { @class = "form-radio-input", @name = "test" })
						@Html.Label(option.Answer, new { @class = "col-sm-2 control-label" })
					</div>*@
					}
				}
			</div>

			<div class="form-check">
				@if (question.TypeId == 2)
				{
					foreach (var option in question.QuestionOptions)
					{
						<div class="col-md-10">
							@Html.CheckBox(option.Answer, false, htmlAttributes: new { @class = "form-check-input" })
							@Html.Label(option.Answer, new { @class = "col-sm-2 control-label" })
						</div>
					}
				}
			</div>

			</div>
			}

			<div class="form-group">
				@Html.LabelFor(model => model.FileId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FileId, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FileId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.AuthorId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TemplateFile, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.TemplateFile, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.TemplateFile, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group" id="data_1">
				@Html.LabelFor(model => model.UpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.UpdatedOn, new { htmlAttributes = new { @Value = Model.UpdatedOn.ToString("MM/dd/yyyy"), @class = "form-control datetimepicker", @id = "StartDate"} })
						@Html.ValidationMessageFor(model => model.UpdatedOn, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}