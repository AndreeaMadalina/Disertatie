@model AplicatieDisertatie.Models.FileViewModel

@{
	ViewBag.Title = "OpenFile";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int count = 1;
	List<string> idList = new List<string>();
}

<h2>OpenFile</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	if (ViewBag.UserNoOfResponses > 0)
	{
		//@Html.Partial("ResumedQuiz", Model)
		<div class="form-horizontal">
			<h4>@Html.DisplayName(Model.FileName)</h4>
			<h4>@String.Format("{0}/{1} correct answers!", ViewBag.UserNoOfResponses, Model.Questions.Count)</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

			@foreach (AplicatieDisertatie.Models.QuestionViewModel question in Model.Questions)
			{
				bool isCorrectSingleAnswer = false;
				bool isCorrectMultipleAnswer = true;
				<div class="BlockQ" style="border: 1px solid #bdbdbd; width: 75%; border-radius: 4px; margin-top: 40px; background-color: azure; padding: 8px;">
					<div class="form-group">
						@Html.Label(question.QuestionText, htmlAttributes: new { @class = "control-label col-md" })

						<div class="col-md form-group" id="@question.QuestionId">
							@if (question.TypeId == 1)
							{
								foreach (var option in question.QuestionOptions)
								{
									var ans = Model.UserAnswers.FirstOrDefault(u => u.OptionId == option.OptionId);
									if (ans != null)
									{
										<div class="col-md custom-control custom-radio border-dark" style="margin-left: 3%; border-radius: 100%">
											@Html.RadioButton("quId_" + question.QuestionId + "_ansId_" + option.OptionId, option.Answer, true, new { @id = ans.OptionId, @class = "custom-control-input rdomcqans", disabled = "disabled" })
											@Html.Label(option.Answer, new { @class = "custom-control-label", @for = ans.OptionId })
										</div>

										idList.Add("quId_" + question.QuestionId + "_ansId_" + option.OptionId);
									}
									else
									{
										<div class="col-md custom-control custom-radio border-dark" style="margin-left: 3%; border-radius: 100%">
											@Html.RadioButton("quId_" + question.QuestionId + "_ansId_" + option.OptionId, option.Answer, new { @id = option.OptionId, @class = "custom-control-input rdomcqans", disabled = "disabled" })
											@Html.Label(option.Answer, new { @class = "custom-control-label", @for = option.OptionId })
										</div>
									}

									if (ans?.OptionId == option.OptionId && option.IsValid.Value)
									{
										isCorrectSingleAnswer = true;
									}
								}
							}

							@if (question.TypeId == 2)
							{
								List<int> validR = new List<int>();
								var qAns = Model.UserAnswers.Where(u => u.QuestionId == question.QuestionId);
								foreach (var option in question.QuestionOptions)
								{
									var ans = qAns.FirstOrDefault(u => u.OptionId == option.OptionId);
									if (ans != null)
									{
										<div class="col-md custom-control custom-checkbox">
											@Html.CheckBox("quId_" + question.QuestionId + "_ansId_" + option.OptionId, true, htmlAttributes: new { @id = ans.OptionId, @class = "custom-control-input rdomcqans", disabled = "disabled" })
											@Html.Label(option.Answer, new { @class = "custom-control-label", @for = ans.OptionId })
										</div>
										idList.Add("quId_" + question.QuestionId + "_ansId_" + option.OptionId);
									}
									else
									{
										<div class="col-md custom-control custom-checkbox">
											@Html.CheckBox("quId_" + question.QuestionId + "_ansId_" + option.OptionId, false, htmlAttributes: new { @id = option.OptionId, @class = "custom-control-input rdomcqans", disabled = "disabled" })
											@Html.Label(option.Answer, new { @class = "custom-control-label", @for = option.OptionId })
										</div>
									}


									if (option.IsValid.Value)
									{
										validR.Add(option.OptionId);
									}
								}

								foreach (var a in qAns)
								{
									if (!validR.Exists(x => x == a.OptionId))
									{
										isCorrectMultipleAnswer = false;
									}
								}
							}

							@if (question.TypeId == 3)
							{
								<div class="form-text">
									@Html.TextArea("quId_" + question.QuestionId + "_ansText_", null, new { @class = "form-control", disabled = "disabled" })
								</div>
							}
						</div>

						@if (( isCorrectSingleAnswer == true && question.TypeId == 1 ) || ( isCorrectMultipleAnswer == true && question.TypeId == 2 ))
						{
							<div class="alert alert-success" role="alert"><span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span> Correct answer</div>
						}
						else if (( isCorrectSingleAnswer == false && question.TypeId == 1 ) || ( isCorrectMultipleAnswer == false && question.TypeId == 2 ))
						{
							if (question.TypeId == 1)
							{
								string correctAns = question.QuestionOptions.FirstOrDefault(a => a.IsValid.Value).Answer;
								<div class="alert alert-danger" role="alert"> <span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"></span> Incorrect answer - The Good Answer is <b> @correctAns </b></div>
							}
							if (question.TypeId == 2)
							{
								var correctAnswers = question.QuestionOptions.Where(a => a.IsValid.Value);
								string correctAns = string.Empty;
								List<string> ansList = new List<string>();
								foreach(var c in correctAnswers)
								{
									ansList.Add(c.Answer);
								}
								correctAns = string.Join(", ", ansList);
								<div class="alert alert-danger" role="alert"> <span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"></span> Incorrect answer - The Good Answer is <b> @correctAns </b></div>
							}
						}
					</div>
				</div>

				count++;
			}
		</div>

		<span id="countQuestions" style="display:none;">@count</span>

	}
	else
	{

		<div class="form-horizontal">
			<h4>@Html.DisplayName(Model.FileName)</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

			@foreach (AplicatieDisertatie.Models.QuestionViewModel question in Model.Questions)
			{
				<div class="form-group">
					@Html.Label(question.QuestionText, htmlAttributes: new { @class = "control-label col-md" })

					<div class="col-md form-group" id="@question.QuestionId">
						@if (question.TypeId == 1)
						{
							foreach (var option in question.QuestionOptions)
							{
								<div class="col-md custom-control custom-radio">
									@Html.RadioButton("quId_" + question.QuestionId + "_ansId_" + option.OptionId, option.Answer, new { @id = option.OptionId, @class = "custom-control-input rdomcqans" })
									@Html.Label(option.Answer, new { @class = "custom-control-label", @for = option.OptionId })
								</div>
							}
						}

						@if (question.TypeId == 2)
						{
							foreach (var option in question.QuestionOptions)
							{
								<div class="col-md custom-control custom-checkbox">
									@Html.CheckBox("quId_" + question.QuestionId + "_ansId_" + option.OptionId, false, htmlAttributes: new { @id = option.OptionId, @class = "custom-control-input rdomcqans" })
									@Html.Label(option.Answer, new { @class = "custom-control-label", @for = option.OptionId })
								</div>
							}
						}

						@if (question.TypeId == 3)
						{
							<div class="form-text">
								@Html.TextArea("quId_" + question.QuestionId + "_ansText_", null, new { @class = "form-control" })
							</div>
						}
					</div>
				</div>
			}
		</div>

	}

	if (ViewBag.UserNoOfResponses == 0)
	{
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				@*<input type="submit" id="SubmitQuiz" value="Submit" class="btn btn-default" onclick="SubmitQuiz(@(Model.FileId))" />*@
				<a href="#" class="btn btn-danger" onclick="SubmitQuiz('@Model.FileId')">Submit</a>

			</div>
		</div>
	}
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/MyScripts/SubmitQuiz.js"></script>
	@*<script src="~/Scripts/MyScripts/ShowQuizResults.js"></script>
		<script>
			var userAnsList = @(Html.Raw(Json.Encode(ViewBag.UserAns)));
			var questions = @(Html.Raw(Json.Encode(idList)));

			$(document).ready(function () {
				ShowQuizResult(userAnsList, questions);

			});
		</script>*@
}
